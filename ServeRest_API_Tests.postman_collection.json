{
	"info": {
		"_postman_id": "fe7ee1a7-fa1a-4e30-8df9-a9d94ec0dd3f",
		"name": "ServeRest_API_Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38001366",
		"_collection_link": "https://consrcio-dos-vingadores.postman.co/workspace/My-Workspace~bb18501b-5cde-4ab1-8fee-f733052923d1/collection/38001366-fe7ee1a7-fa1a-4e30-8df9-a9d94ec0dd3f?action=share&source=collection_link&creator=38001366"
	},
	"item": [
		{
			"name": "US001 - Usuários",
			"item": [
				{
					"name": "CT01 - Cadastro Válido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"[CT01] Status 201 - Cadastro válido\", () => {\r",
									"  pm.response.to.have.status(201);\r",
									"  const jsonData = pm.response.json();\r",
									"  pm.expect(jsonData).to.have.property(\"_id\");\r",
									"  pm.environment.set(\"user_id\", jsonData._id);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Campo 'administrador' é boolean\", () => {\r",
									"  pm.expect(pm.response.json().administrador).to.be.a(\"boolean\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Junio Test\",\r\n  \"email\": \"eejunio@qa.com\",\r\n  \"password\": \"23\",\r\n  \"administrador\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://serverest.dev/usuarios",
							"protocol": "https",
							"host": [
								"serverest",
								"dev"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "CT02 - Cadastro com e-mail duplicado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"[CT02] Status 400 - E-mail duplicado\", () => {\r",
									"  pm.response.to.have.status(400);\r",
									"  pm.expect(pm.response.text()).to.include(\"já está sendo usado\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Ju Test\",\r\n  \"email\": \"ttejunio@qa.com\",\r\n  \"password\": \"1234567891011\",\r\n  \"administrador\": \"false\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://serverest.dev/usuarios",
							"protocol": "https",
							"host": [
								"serverest",
								"dev"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "CT03 - Cadastro com domínio de email inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"[CT03] Status 400 - E-mail bloqueado\", () => {\r",
									"  pm.response.to.have.status(400);\r",
									"  pm.expect(pm.response.json()).to.have.property(\"message\", \"Provedores gmail/hotmail não são permitidos\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Ju Test\",\r\n  \"email\": \"testinho@hotmail.com\",\r\n  \"password\": \"1234567891011\",\r\n  \"administrador\": \"false\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://serverest.dev/usuarios",
							"protocol": "https",
							"host": [
								"serverest",
								"dev"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "CT04 - Senha Inválida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"[CT04] Status 400 - Senha curta\", () => {\r",
									"  pm.response.to.have.status(400);\r",
									"  pm.expect(pm.response.json()).to.have.property(\"message\", \"A senha deve ter entre 5 e 10 caracteres\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Junio Test\",\r\n  \"email\": \"junio@qa.com\",\r\n  \"password\": \"23\",\r\n  \"administrador\": \"false\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://serverest.dev/usuarios",
							"protocol": "https",
							"host": [
								"serverest",
								"dev"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "CT05 - Usuário Inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"[CT05] Status 201 - PUT cria novo usuário\", () => {\r",
									"  pm.response.to.have.status(201);\r",
									"  pm.expect(pm.response.json()).to.have.property(\"_id\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Fulano da Silva\",\r\n  \"email\": \"beltrano@qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\",\r\n  \"_id\": \"NRcyUQCCoaFxKwRI\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://serverest.dev/usuarios/NRcyUQCCoaFxKwRI",
							"protocol": "https",
							"host": [
								"serverest",
								"dev"
							],
							"path": [
								"usuarios",
								"NRcyUQCCoaFxKwRI"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "US002 - Login",
			"item": [
				{
					"name": "CT07 - Login Válido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Valida resposta positiva\r",
									"pm.test(\"[CT07] Status 200 - Login válido\", () => pm.response.to.have.status(200));\r",
									"pm.test(\"Token Bearer é retornado\", () => {\r",
									"  const jsonData = pm.response.json();\r",
									"  pm.expect(jsonData).to.have.property(\"authorization\");\r",
									"  pm.expect(jsonData.authorization).to.include(\"Bearer\");\r",
									"  pm.environment.set(\"auth_token\", jsonData.authorization); // Salva token\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"testeasyo@qa.com\",\r\n  \"password\": \"23\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://serverest.dev/login",
							"protocol": "https",
							"host": [
								"serverest",
								"dev"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "CT08 - Login com usuário não cadastrado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"[CT08] Status 401 - Usuário não existe\", () => {\r",
									"  pm.response.to.have.status(401);\r",
									"  pm.expect(pm.response.json()).to.have.property(\"message\", \"Email e/ou senha inválidos\");\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"eunio@qa.com\",\r\n  \"password\": \"23\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://serverest.dev/login",
							"protocol": "https",
							"host": [
								"serverest",
								"dev"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "CT09 Senha Incorreta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"[CT09] Status 401 - Senha incorreta\", () => {\r",
									"  pm.response.to.have.status(401);\r",
									"  // Sugestão: Mensagem poderia ser mais específica\r",
									"  pm.expect(pm.response.text()).to.include(\"inválidos\"); \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"eejunio@qa.com\",\r\n  \"password\": \"32\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://serverest.dev/login",
							"protocol": "https",
							"host": [
								"serverest",
								"dev"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "CT10 - Token Expirado",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.test(\"[CT10] Token expirado deve retornar 401\", () => {\r",
									"  pm.response.to.have.status(401);\r",
									"  pm.expect(pm.response.json()).to.have.property(\"message\", \"Token expirado\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"[CT10] Token expirado retorna 401\", () => {\r",
									"  pm.response.to.have.status(401);\r",
									"  pm.expect(pm.response.json()).to.have.property(\"message\", \"Token expirado\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{vault:json-web-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://serverest.dev/produtos",
							"protocol": "https",
							"host": [
								"serverest",
								"dev"
							],
							"path": [
								"produtos"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "US003 - Produtos",
			"item": [
				{
					"name": "CT11 - Cadastrar Produto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"[CT11] Status 201 - Produto criado\", () => {\r",
									"  pm.response.to.have.status(201);\r",
									"  const jsonData = pm.response.json();\r",
									"  pm.expect(jsonData).to.have.property(\"_id\");\r",
									"  pm.environment.set(\"product_id\", jsonData._id); // Salva ID para uso futuro\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{vault:json-web-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Bolsa de viagem\",\r\n  \"preco\": 100,\r\n  \"descricao\": \"Teste automatizado\",\r\n  \"quantidade\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://serverest.dev/produtos",
							"protocol": "https",
							"host": [
								"serverest",
								"dev"
							],
							"path": [
								"produtos"
							]
						}
					},
					"response": []
				},
				{
					"name": "CT12 - Nome Duplicado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"[CT12] Status 400 - Nome duplicado\", () => {\r",
									"  pm.response.to.have.status(400);\r",
									"  pm.expect(pm.response.json()).to.have.property(\"message\", \"Já existe produto com esse nome\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{vault:json-web-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Bolsa de viagem\",  \r\n  \"preco\": 200,\r\n  \"descricao\": \"Teste de duplicação\",\r\n  \"quantidade\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://serverest.dev/produtos",
							"protocol": "https",
							"host": [
								"serverest",
								"dev"
							],
							"path": [
								"produtos"
							]
						}
					},
					"response": []
				},
				{
					"name": "CT14 - Atualizar com Nome Duplicado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"[CT14] Status 400 - PUT com nome duplicado\", () => {\r",
									"  pm.response.to.have.status(400);\r",
									"  pm.expect(pm.response.text()).to.include(\"Já existe produto com esse nome\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{vault:json-web-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Bolsa pequena\",  \r\n  \"preco\": 100, \r\n  \"descricao\": \"Bolsa mini\",\r\n  \"quantidade\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://serverest.dev/produtos/75H1yOojulkILljl",
							"protocol": "https",
							"host": [
								"serverest",
								"dev"
							],
							"path": [
								"produtos",
								"75H1yOojulkILljl"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}